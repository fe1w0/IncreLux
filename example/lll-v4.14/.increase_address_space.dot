digraph "CFG for 'increase_address_space' function" {
	label="CFG for 'increase_address_space' function";

	Node0x561b94826d50 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ncrease_address_space-0:\l  %retval = alloca i1, align 1\l  %domain.addr = alloca %struct.protection_domain*, align 8\l  %gfp.addr = alloca i32, align 4\l  %pte = alloca i64*, align 8\l  store %struct.protection_domain* %domain, %struct.protection_domain**\l... %domain.addr, align 8\l  call void @llvm.dbg.declare(metadata %struct.protection_domain**\l... %domain.addr, metadata !6072, metadata !DIExpression()), !dbg !6073\l  store i32 %gfp, i32* %gfp.addr, align 4\l  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !6074,\l... metadata !DIExpression()), !dbg !6075\l  call void @llvm.dbg.declare(metadata i64** %pte, metadata !6076, metadata\l... !DIExpression()), !dbg !6077\l  %0 = load %struct.protection_domain*, %struct.protection_domain**\l... %domain.addr, align 8, !dbg !6078\l  %mode = getelementptr inbounds %struct.protection_domain,\l... %struct.protection_domain* %0, i32 0, i32 6, !dbg !6080\l  %1 = load i32, i32* %mode, align 4, !dbg !6080\l  %cmp = icmp eq i32 %1, 6, !dbg !6081\l  br i1 %cmp, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-increase_address_space-1, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-increase_address_space-2, !dbg !6082\l|{<s0>T|<s1>F}}"];
	Node0x561b94826d50:s0 -> Node0x561b94827130;
	Node0x561b94826d50:s1 -> Node0x561b94827180;
	Node0x561b94827130 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ncrease_address_space-1: \l  store i1 false, i1* %retval, align 1, !dbg !6083\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-increase_address_space-5, !dbg !6083\l}"];
	Node0x561b94827130 -> Node0x561b94827270;
	Node0x561b94827180 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ncrease_address_space-2: \l  %2 = load i32, i32* %gfp.addr, align 4, !dbg !6084\l  %call = call i64 @get_zeroed_page(i32 %2) #8, !dbg !6085\l  %3 = inttoptr i64 %call to i8*, !dbg !6086\l  %4 = bitcast i8* %3 to i64*, !dbg !6086\l  store i64* %4, i64** %pte, align 8, !dbg !6087\l  %5 = load i64*, i64** %pte, align 8, !dbg !6088\l  %tobool = icmp ne i64* %5, null, !dbg !6088\l  br i1 %tobool, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-increase_address_space-4, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-increase_address_space-3, !dbg !6090\l|{<s0>T|<s1>F}}"];
	Node0x561b94827180:s0 -> Node0x561b94827220;
	Node0x561b94827180:s1 -> Node0x561b948271d0;
	Node0x561b948271d0 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ncrease_address_space-3: \l  store i1 false, i1* %retval, align 1, !dbg !6091\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-increase_address_space-5, !dbg !6091\l}"];
	Node0x561b948271d0 -> Node0x561b94827270;
	Node0x561b94827220 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ncrease_address_space-4: \l  %6 = load %struct.protection_domain*, %struct.protection_domain**\l... %domain.addr, align 8, !dbg !6092\l  %pt_root = getelementptr inbounds %struct.protection_domain,\l... %struct.protection_domain* %6, i32 0, i32 7, !dbg !6092\l  %7 = load i64*, i64** %pt_root, align 8, !dbg !6092\l  %8 = bitcast i64* %7 to i8*, !dbg !6092\l  %call3 = call i64 @iommu_virt_to_phys(i8* %8) #8, !dbg !6092\l  %9 = load %struct.protection_domain*, %struct.protection_domain**\l... %domain.addr, align 8, !dbg !6092\l  %mode4 = getelementptr inbounds %struct.protection_domain,\l... %struct.protection_domain* %9, i32 0, i32 6, !dbg !6092\l  %10 = load i32, i32* %mode4, align 4, !dbg !6092\l  %shl = shl i32 %10, 9, !dbg !6092\l  %conv = sext i32 %shl to i64, !dbg !6092\l  %and = and i64 %conv, 3584, !dbg !6092\l  %or = or i64 %call3, %and, !dbg !6092\l  %or5 = or i64 %or, 1, !dbg !6092\l  %or6 = or i64 %or5, 2305843009213693952, !dbg !6092\l  %or7 = or i64 %or6, 4611686018427387904, !dbg !6092\l  %11 = load i64*, i64** %pte, align 8, !dbg !6093\l  store i64 %or7, i64* %11, align 8, !dbg !6094\l  %12 = load i64*, i64** %pte, align 8, !dbg !6095\l  %13 = load %struct.protection_domain*, %struct.protection_domain**\l... %domain.addr, align 8, !dbg !6096\l  %pt_root8 = getelementptr inbounds %struct.protection_domain,\l... %struct.protection_domain* %13, i32 0, i32 7, !dbg !6097\l  store i64* %12, i64** %pt_root8, align 8, !dbg !6098\l  %14 = load %struct.protection_domain*, %struct.protection_domain**\l... %domain.addr, align 8, !dbg !6099\l  %mode9 = getelementptr inbounds %struct.protection_domain,\l... %struct.protection_domain* %14, i32 0, i32 6, !dbg !6100\l  %15 = load i32, i32* %mode9, align 4, !dbg !6101\l  %add = add i32 %15, 1, !dbg !6101\l  store i32 %add, i32* %mode9, align 4, !dbg !6101\l  %16 = load %struct.protection_domain*, %struct.protection_domain**\l... %domain.addr, align 8, !dbg !6102\l  %updated = getelementptr inbounds %struct.protection_domain,\l... %struct.protection_domain* %16, i32 0, i32 11, !dbg !6103\l  store i8 1, i8* %updated, align 8, !dbg !6104\l  store i1 true, i1* %retval, align 1, !dbg !6105\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-increase_address_space-5, !dbg !6105\l}"];
	Node0x561b94827220 -> Node0x561b94827270;
	Node0x561b94827270 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ncrease_address_space-5: \l  %17 = load i1, i1* %retval, align 1, !dbg !6106\l  ret i1 %17, !dbg !6106\l}"];
}
