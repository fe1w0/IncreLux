digraph "CFG for 'iommu_queue_command_sync' function" {
	label="CFG for 'iommu_queue_command_sync' function";

	Node0x561b949a70f0 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_queue_command_sync-0:\l  %lock.addr.i6 = alloca %struct.spinlock*, align 8\l  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i6,\l... metadata !6077, metadata !DIExpression()), !dbg !6082\l  %flags.addr.i = alloca i64, align 8\l  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6084,\l... metadata !DIExpression()), !dbg !6085\l  %__dummy.i = alloca i64, align 8\l  call void @llvm.dbg.declare(metadata i64* %__dummy.i, metadata !6086,\l... metadata !DIExpression()), !dbg !6089\l  %__dummy2.i = alloca i64, align 8\l  call void @llvm.dbg.declare(metadata i64* %__dummy2.i, metadata !6090,\l... metadata !DIExpression()), !dbg !6089\l  %tmp.i = alloca i32, align 4\l  %lock.addr.i = alloca %struct.spinlock*, align 8\l  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i,\l... metadata !6091, metadata !DIExpression()), !dbg !6096\l  %iommu.addr = alloca %struct.amd_iommu*, align 8\l  %cmd.addr = alloca %struct.iommu_cmd*, align 8\l  %sync.addr = alloca i8, align 1\l  %flags = alloca i64, align 8\l  %ret = alloca i32, align 4\l  %__dummy = alloca i64, align 8\l  %__dummy2 = alloca i64, align 8\l  %tmp = alloca i32, align 4\l  store %struct.amd_iommu* %iommu, %struct.amd_iommu** %iommu.addr, align 8\l  call void @llvm.dbg.declare(metadata %struct.amd_iommu** %iommu.addr,\l... metadata !6100, metadata !DIExpression()), !dbg !6101\l  store %struct.iommu_cmd* %cmd, %struct.iommu_cmd** %cmd.addr, align 8\l  call void @llvm.dbg.declare(metadata %struct.iommu_cmd** %cmd.addr, metadata\l... !6102, metadata !DIExpression()), !dbg !6103\l  %frombool = zext i1 %sync to i8\l  store i8 %frombool, i8* %sync.addr, align 1\l  call void @llvm.dbg.declare(metadata i8* %sync.addr, metadata !6104,\l... metadata !DIExpression()), !dbg !6105\l  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6106, metadata\l... !DIExpression()), !dbg !6107\l  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6108, metadata\l... !DIExpression()), !dbg !6109\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_queue_command_sync-1, !dbg !6110\l}"];
	Node0x561b949a70f0 -> Node0x561b949ab3e0;
	Node0x561b949ab3e0 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_queue_command_sync-1: \l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_queue_command_sync-2, !dbg !6111\l}"];
	Node0x561b949ab3e0 -> Node0x561b949ab430;
	Node0x561b949ab430 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_queue_command_sync-2: \l  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6112, metadata\l... !DIExpression()), !dbg !6114\l  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6115,\l... metadata !DIExpression()), !dbg !6114\l  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6114\l  %conv = zext i1 %cmp to i32, !dbg !6114\l  store i32 1, i32* %tmp, align 4, !dbg !6114\l  %0 = load i32, i32* %tmp, align 4, !dbg !6114\l  %1 = load %struct.amd_iommu*, %struct.amd_iommu** %iommu.addr, align 8, !dbg\l... !6116\l  %lock = getelementptr inbounds %struct.amd_iommu, %struct.amd_iommu* %1, i32\l... 0, i32 2, !dbg !6116\l  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8\l  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg\l... !6117\l  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0,\l... i32 0, !dbg !6118\l  %rlock.i = bitcast %union.anon.1* %3 to %struct.raw_spinlock*, !dbg !6118\l  %call2 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %rlock.i)\l... #8, !dbg !6116\l  store i64 %call2, i64* %flags, align 8, !dbg !6116\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_queue_command_sync-3, !dbg !6116\l}"];
	Node0x561b949ab430 -> Node0x561b949ab480;
	Node0x561b949ab480 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_queue_command_sync-3: \l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_queue_command_sync-4, !dbg !6111\l}"];
	Node0x561b949ab480 -> Node0x561b949ab4d0;
	Node0x561b949ab4d0 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_queue_command_sync-4: \l  %4 = load %struct.amd_iommu*, %struct.amd_iommu** %iommu.addr, align 8, !dbg\l... !6119\l  %5 = load %struct.iommu_cmd*, %struct.iommu_cmd** %cmd.addr, align 8, !dbg\l... !6120\l  %6 = load i8, i8* %sync.addr, align 1, !dbg !6121\l  %tobool = trunc i8 %6 to i1, !dbg !6121\l  %call4 = call i32 @__iommu_queue_command_sync(%struct.amd_iommu* %4,\l... %struct.iommu_cmd* %5, i1 zeroext %tobool) #8, !dbg !6122\l  store i32 %call4, i32* %ret, align 4, !dbg !6123\l  %7 = load %struct.amd_iommu*, %struct.amd_iommu** %iommu.addr, align 8, !dbg\l... !6124\l  %lock5 = getelementptr inbounds %struct.amd_iommu, %struct.amd_iommu* %7,\l... i32 0, i32 2, !dbg !6125\l  %8 = load i64, i64* %flags, align 8, !dbg !6126\l  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i6, align 8\l  store i64 %8, i64* %flags.addr.i, align 8\l  store i32 1, i32* %tmp.i, align 4, !dbg !6089\l  %9 = load i32, i32* %tmp.i, align 4, !dbg !6089\l  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i6, align 8,\l... !dbg !6127\l  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0,\l... i32 0, !dbg !6127\l  %rlock.i7 = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !6127\l  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !6127\l  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %rlock.i7, i64\l... %12) #9, !dbg !6127\l  %13 = load i32, i32* %ret, align 4, !dbg !6128\l  ret i32 %13, !dbg !6129\l}"];
}
