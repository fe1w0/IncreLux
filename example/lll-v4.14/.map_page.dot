digraph "CFG for 'map_page' function" {
	label="CFG for 'map_page' function";

	Node0x561b9491c980 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-m\l...ap_page-0:\l  %retval = alloca i64, align 8\l  %dev.addr = alloca %struct.device*, align 8\l  %page.addr = alloca %struct.page*, align 8\l  %offset.addr = alloca i64, align 8\l  %size.addr = alloca i64, align 8\l  %dir.addr = alloca i32, align 4\l  %attrs.addr = alloca i64, align 8\l  %paddr = alloca i64, align 8\l  %domain = alloca %struct.protection_domain*, align 8\l  %dma_dom = alloca %struct.dma_ops_domain*, align 8\l  %dma_mask = alloca i64, align 8\l  store %struct.device* %dev, %struct.device** %dev.addr, align 8\l  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata\l... !6070, metadata !DIExpression()), !dbg !6071\l  store %struct.page* %page, %struct.page** %page.addr, align 8\l  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata\l... !6072, metadata !DIExpression()), !dbg !6073\l  store i64 %offset, i64* %offset.addr, align 8\l  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !6074,\l... metadata !DIExpression()), !dbg !6075\l  store i64 %size, i64* %size.addr, align 8\l  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6076,\l... metadata !DIExpression()), !dbg !6077\l  store i32 %dir, i32* %dir.addr, align 4\l  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !6078,\l... metadata !DIExpression()), !dbg !6079\l  store i64 %attrs, i64* %attrs.addr, align 8\l  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !6080,\l... metadata !DIExpression()), !dbg !6081\l  call void @llvm.dbg.declare(metadata i64* %paddr, metadata !6082, metadata\l... !DIExpression()), !dbg !6083\l  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !6084\l  %1 = load i64, i64* @vmemmap_base, align 8, !dbg !6084\l  %2 = inttoptr i64 %1 to %struct.page*, !dbg !6084\l  %sub.ptr.lhs.cast = ptrtoint %struct.page* %0 to i64, !dbg !6084\l  %sub.ptr.rhs.cast = ptrtoint %struct.page* %2 to i64, !dbg !6084\l  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6084\l  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !6084\l  %shl = shl i64 %sub.ptr.div, 12, !dbg !6084\l  %3 = load i64, i64* %offset.addr, align 8, !dbg !6085\l  %add = add i64 %shl, %3, !dbg !6086\l  store i64 %add, i64* %paddr, align 8, !dbg !6083\l  call void @llvm.dbg.declare(metadata %struct.protection_domain** %domain,\l... metadata !6087, metadata !DIExpression()), !dbg !6088\l  call void @llvm.dbg.declare(metadata %struct.dma_ops_domain** %dma_dom,\l... metadata !6089, metadata !DIExpression()), !dbg !6090\l  call void @llvm.dbg.declare(metadata i64* %dma_mask, metadata !6091,\l... metadata !DIExpression()), !dbg !6092\l  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6093\l  %call = call %struct.protection_domain* @get_domain(%struct.device* %4) #8,\l... !dbg !6094\l  store %struct.protection_domain* %call, %struct.protection_domain** %domain,\l... align 8, !dbg !6095\l  %5 = load %struct.protection_domain*, %struct.protection_domain** %domain,\l... align 8, !dbg !6096\l  %6 = bitcast %struct.protection_domain* %5 to i8*, !dbg !6096\l  %call1 = call i64 @PTR_ERR(i8* %6) #8, !dbg !6098\l  %cmp = icmp eq i64 %call1, -22, !dbg !6099\l  br i1 %cmp, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-map_page-1, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-map_page-2, !dbg !6100\l|{<s0>T|<s1>F}}"];
	Node0x561b9491c980:s0 -> Node0x561b94863490;
	Node0x561b9491c980:s1 -> Node0x561b948634e0;
	Node0x561b94863490 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-m\l...ap_page-1: \l  %7 = load i64, i64* %paddr, align 8, !dbg !6101\l  store i64 %7, i64* %retval, align 8, !dbg !6102\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-map_page-6, !dbg !6102\l}"];
	Node0x561b94863490 -> Node0x561b94863620;
	Node0x561b948634e0 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-m\l...ap_page-2: \l  %8 = load %struct.protection_domain*, %struct.protection_domain** %domain,\l... align 8, !dbg !6103\l  %9 = bitcast %struct.protection_domain* %8 to i8*, !dbg !6103\l  %call2 = call zeroext i1 @IS_ERR(i8* %9) #8, !dbg !6105\l  br i1 %call2, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-map_page-3, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-map_page-4, !dbg !6106\l|{<s0>T|<s1>F}}"];
	Node0x561b948634e0:s0 -> Node0x561b94863530;
	Node0x561b948634e0:s1 -> Node0x561b94863580;
	Node0x561b94863530 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-m\l...ap_page-3: \l  store i64 0, i64* %retval, align 8, !dbg !6107\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-map_page-6, !dbg !6107\l}"];
	Node0x561b94863530 -> Node0x561b94863620;
	Node0x561b94863580 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-m\l...ap_page-4: \l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-map_page-5\l}"];
	Node0x561b94863580 -> Node0x561b948635d0;
	Node0x561b948635d0 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-m\l...ap_page-5: \l  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6108\l  %dma_mask5 = getelementptr inbounds %struct.device, %struct.device* %10, i32\l... 0, i32 18, !dbg !6109\l  %11 = load i64*, i64** %dma_mask5, align 8, !dbg !6109\l  %12 = load i64, i64* %11, align 8, !dbg !6110\l  store i64 %12, i64* %dma_mask, align 8, !dbg !6111\l  %13 = load %struct.protection_domain*, %struct.protection_domain** %domain,\l... align 8, !dbg !6112\l  %call6 = call %struct.dma_ops_domain*\l... @to_dma_ops_domain(%struct.protection_domain* %13) #8, !dbg !6113\l  store %struct.dma_ops_domain* %call6, %struct.dma_ops_domain** %dma_dom,\l... align 8, !dbg !6114\l  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6115\l  %15 = load %struct.dma_ops_domain*, %struct.dma_ops_domain** %dma_dom, align\l... 8, !dbg !6116\l  %16 = load i64, i64* %paddr, align 8, !dbg !6117\l  %17 = load i64, i64* %size.addr, align 8, !dbg !6118\l  %18 = load i32, i32* %dir.addr, align 4, !dbg !6119\l  %19 = load i64, i64* %dma_mask, align 8, !dbg !6120\l  %call7 = call i64 @__map_single(%struct.device* %14, %struct.dma_ops_domain*\l... %15, i64 %16, i64 %17, i32 %18, i64 %19) #8, !dbg !6121\l  store i64 %call7, i64* %retval, align 8, !dbg !6122\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-map_page-6, !dbg !6122\l}"];
	Node0x561b948635d0 -> Node0x561b94863620;
	Node0x561b94863620 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-m\l...ap_page-6: \l  %20 = load i64, i64* %retval, align 8, !dbg !6123\l  ret i64 %20, !dbg !6123\l}"];
}
