digraph "CFG for 'iommu_handle_ppr_entry' function" {
	label="CFG for 'iommu_handle_ppr_entry' function";

	Node0x561b946d6b90 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_handle_ppr_entry-0:\l  %iommu.addr = alloca %struct.amd_iommu*, align 8\l  %raw.addr = alloca i64*, align 8\l  %fault = alloca %struct.amd_iommu_fault, align 8\l  store %struct.amd_iommu* %iommu, %struct.amd_iommu** %iommu.addr, align 8\l  call void @llvm.dbg.declare(metadata %struct.amd_iommu** %iommu.addr,\l... metadata !6069, metadata !DIExpression()), !dbg !6070\l  store i64* %raw, i64** %raw.addr, align 8\l  call void @llvm.dbg.declare(metadata i64** %raw.addr, metadata !6071,\l... metadata !DIExpression()), !dbg !6072\l  call void @llvm.dbg.declare(metadata %struct.amd_iommu_fault* %fault,\l... metadata !6073, metadata !DIExpression()), !dbg !6081\l  %0 = load i64*, i64** %raw.addr, align 8, !dbg !6082\l  %arrayidx = getelementptr i64, i64* %0, i64 0, !dbg !6082\l  %1 = load i64, i64* %arrayidx, align 8, !dbg !6082\l  %shr = lshr i64 %1, 60, !dbg !6082\l  %and = and i64 %shr, 15, !dbg !6082\l  %cmp = icmp ne i64 %and, 1, !dbg !6084\l  br i1 %cmp, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_handle_ppr_entry-1, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_handle_ppr_entry-4, !dbg !6085\l|{<s0>T|<s1>F}}"];
	Node0x561b946d6b90:s0 -> Node0x561b946d74e0;
	Node0x561b946d6b90:s1 -> Node0x561b946d75d0;
	Node0x561b946d74e0 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_handle_ppr_entry-1: \l  %call = call i32 @___ratelimit(%struct.ratelimit_state*\l... @iommu_handle_ppr_entry._rs, i8* getelementptr inbounds ([23 x i8], [23 x\l... i8]* @__func__.iommu_handle_ppr_entry, i64 0, i64 0)) #8, !dbg !6086\l  %tobool = icmp ne i32 %call, 0, !dbg !6086\l  br i1 %tobool, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_handle_ppr_entry-2, label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_handle_ppr_entry-3, !dbg !6090\l|{<s0>T|<s1>F}}"];
	Node0x561b946d74e0:s0 -> Node0x561b946d7530;
	Node0x561b946d74e0:s1 -> Node0x561b946d7580;
	Node0x561b946d7530 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_handle_ppr_entry-2: \l  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8],\l... [40 x i8]* @.str.19, i64 0, i64 0)) #8, !dbg !6086\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_handle_ppr_entry-3, !dbg !6086\l}"];
	Node0x561b946d7530 -> Node0x561b946d7580;
	Node0x561b946d7580 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_handle_ppr_entry-3: \l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_handle_ppr_entry-5, !dbg !6091\l}"];
	Node0x561b946d7580 -> Node0x561b946d7620;
	Node0x561b946d75d0 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_handle_ppr_entry-4: \l  %2 = load i64*, i64** %raw.addr, align 8, !dbg !6092\l  %arrayidx4 = getelementptr i64, i64* %2, i64 1, !dbg !6092\l  %3 = load i64, i64* %arrayidx4, align 8, !dbg !6092\l  %address = getelementptr inbounds %struct.amd_iommu_fault,\l... %struct.amd_iommu_fault* %fault, i32 0, i32 0, !dbg !6093\l  store i64 %3, i64* %address, align 8, !dbg !6094\l  %4 = load i64*, i64** %raw.addr, align 8, !dbg !6095\l  %arrayidx5 = getelementptr i64, i64* %4, i64 0, !dbg !6095\l  %5 = load i64, i64* %arrayidx5, align 8, !dbg !6095\l  %shr6 = lshr i64 %5, 42, !dbg !6095\l  %and7 = and i64 %shr6, 15, !dbg !6095\l  %shl = shl i64 %and7, 16, !dbg !6095\l  %6 = load i64*, i64** %raw.addr, align 8, !dbg !6095\l  %arrayidx8 = getelementptr i64, i64* %6, i64 0, !dbg !6095\l  %7 = load i64, i64* %arrayidx8, align 8, !dbg !6095\l  %shr9 = lshr i64 %7, 16, !dbg !6095\l  %and10 = and i64 %shr9, 65535, !dbg !6095\l  %or = or i64 %shl, %and10, !dbg !6095\l  %conv = trunc i64 %or to i32, !dbg !6095\l  %pasid = getelementptr inbounds %struct.amd_iommu_fault,\l... %struct.amd_iommu_fault* %fault, i32 0, i32 1, !dbg !6096\l  store i32 %conv, i32* %pasid, align 8, !dbg !6097\l  %8 = load i64*, i64** %raw.addr, align 8, !dbg !6098\l  %arrayidx11 = getelementptr i64, i64* %8, i64 0, !dbg !6098\l  %9 = load i64, i64* %arrayidx11, align 8, !dbg !6098\l  %and12 = and i64 %9, 65535, !dbg !6098\l  %conv13 = trunc i64 %and12 to i16, !dbg !6098\l  %device_id = getelementptr inbounds %struct.amd_iommu_fault,\l... %struct.amd_iommu_fault* %fault, i32 0, i32 2, !dbg !6099\l  store i16 %conv13, i16* %device_id, align 4, !dbg !6100\l  %10 = load i64*, i64** %raw.addr, align 8, !dbg !6101\l  %arrayidx14 = getelementptr i64, i64* %10, i64 0, !dbg !6101\l  %11 = load i64, i64* %arrayidx14, align 8, !dbg !6101\l  %shr15 = lshr i64 %11, 32, !dbg !6101\l  %and16 = and i64 %shr15, 1023, !dbg !6101\l  %conv17 = trunc i64 %and16 to i16, !dbg !6101\l  %tag = getelementptr inbounds %struct.amd_iommu_fault,\l... %struct.amd_iommu_fault* %fault, i32 0, i32 3, !dbg !6102\l  store i16 %conv17, i16* %tag, align 2, !dbg !6103\l  %12 = load i64*, i64** %raw.addr, align 8, !dbg !6104\l  %arrayidx18 = getelementptr i64, i64* %12, i64 0, !dbg !6104\l  %13 = load i64, i64* %arrayidx18, align 8, !dbg !6104\l  %shr19 = lshr i64 %13, 48, !dbg !6104\l  %and20 = and i64 %shr19, 4095, !dbg !6104\l  %conv21 = trunc i64 %and20 to i16, !dbg !6104\l  %flags = getelementptr inbounds %struct.amd_iommu_fault,\l... %struct.amd_iommu_fault* %fault, i32 0, i32 4, !dbg !6105\l  store i16 %conv21, i16* %flags, align 8, !dbg !6106\l  %14 = bitcast %struct.amd_iommu_fault* %fault to i8*, !dbg !6107\l  %call22 = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head*\l... @ppr_notifier, i64 0, i8* %14) #8, !dbg !6108\l  br label\l... %-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llb\l...c-iommu_handle_ppr_entry-5, !dbg !6109\l}"];
	Node0x561b946d75d0 -> Node0x561b946d7620;
	Node0x561b946d7620 [shape=record,label="{-data2-yizhuo-inc-experiment-experiment-lll-v4.14-drivers-iommu-amd_iommu.llbc-i\l...ommu_handle_ppr_entry-5: \l  ret void, !dbg !6109\l}"];
}
